{"name": "https://cdn-bm.camera360.com/api/product/query", "status": "failed", "statusDetails": {"message": "AssertionError: (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\n  (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\n  (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\n  \nassert False", "trace": "self = <APITesting.TestCase.C360_Android.C360_兼容接口滤镜包.ops兼容下发-滤镜包(ja_JP语言环境).TestDispatcher object at 0x7fcce81ef1f0>, name = '00333_值获取', priority = 5, encryption = 0, sig = 8\nenv = 'PROD', method = 'POST', url = 'https://cdn-bm.camera360.com/api/product/query'\nheaders = {'accept-encoding': 'gzip', 'connection': 'Keep-Alive', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', 'user-agent': 'Dalvik/2.1.0 (Linux; U; Android 12; PDEM10 Build/RKQ1.211103.002)', ...}\nparams = {'UTCOffset': '28800', 'appName': 'camera360', 'appVersion': '9.9.29', 'channel': 'GoogleMarket', ...}, expected = [{'eq': ['code', '200']}]\nexport = {'groupScenesId': 'body.data.group_scenes.scenes[*].id', 'itemsId': 'body.data.items[*].id', 'packagesId': 'body.data.packages[*].pid', 'scenesId': 'body.data.scenes[*].id', ...}\n\n    @pytest.mark.parametrize(\"name, priority, encryption, sig, env, method, url, headers, params, expected, export\",\n                             test_data)\n    def test_api(self, name, priority, encryption, sig, env, method, url, headers, params, expected, export):\n    \n        allure.dynamic.story(\"{i}\".format(i=name))  # 设置用例story名\n        allure.dynamic.severity(serverity[(priority - 1) if priority <= 5 else 4])  # 设置用例优先级\n        allure.dynamic.title(\"{i}\".format(i=url))  # 设定用例标题\n        allure.dynamic.description(\"{i}\".format(i=name))  # 设定用例描述\n    \n        Log.logger(\"开始执行用例：\" + str(name))\n        Log.logger(\"Request url:\" + str(url))\n    \n        # 获取Global_Var参数\n        self.set_globalVar()\n    \n        # 当url不为NULL 与 ${key}\n        url_re = re.findall(r'(\\$\\{\\w+\\})', url)\n    \n        # url_re2 = re.match(r'^https?://([0-9a-zA-Z\\-._]*\\/)*', url)\n        # 修复 url链接中带有参数的情况\n        url_re2 = re.match(r'^https?://([\\w\\-.=${}&?]*\\/*)*', url)\n    \n        # 若 url 不为纯参数（如：非${QADATA}）\n        if url_re2:\n            # 当url中带有参数时，给url添加参数\n            if url_re:\n                urs_flag, url = self.set_url(url)\n                if not urs_flag:\n                    assert False, \"url：参数获取失败\\r\\n Error: {a}\".format(a=headers)\n    \n            # 设置请求头、请求体\n            # 设置 var ${}参数\n            hrs_flag, headers = self.set_headers(headers)\n            prs_flag, params = self.set_parmars(params)\n    \n            if not hrs_flag:\n                assert False, \"请求头headers：参数获取失败\\r\\n Error: {a}\".format(a=headers)\n    \n            elif not prs_flag:\n                assert False, \"请求体params：参数获取失败\\r\\n Error: {a}\".format(a=params)\n    \n            # 设置签名\n            headers, params = self.set_sig(method, url, headers, params, sig, env)\n    \n            # 设置 header 中Content_length\n            # headers = self.set_content_length(headers, params)\n    \n            # Log.logger(\"Request Headers:\" + str(headers))\n            # Log.logger(\"Request Body:\" + str(params))\n    \n            # 发起请求\n            data = self.request(url=url, method=method, params=params, encryption=encryption,\n                                headers=headers, timeout=timeout)\n            if not isinstance(data, str):\n    \n                # 获取返回中的数据供后续用例使用\n                grs_flag, e_msg = self.get_var_from_response(copy.deepcopy(export), data)\n                if not grs_flag:\n                    assert False, \"从返回数据中提取参数失败\\r\\n Error: {a}\".format(a=e_msg)\n    \n                # 设置断言参数\n                exp_flag, expected = self.set_expected(expected)\n                if not exp_flag:\n                    assert False, \"断言：参数获取失败\\r\\n Error: {a}\".format(a=expected)\n    \n                # 断言\n                self.mul_assert(data, expected)\n            else:\n                allure.attach(data, '返回结果：', attachment_type=allure.attachment_type.HTML)\n>               assert False, data\nE               AssertionError: (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\nE                 (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\nE                 (\"Connection broken: InvalidChunkLength(got length b'', 0 bytes read)\", InvalidChunkLength(got length b'', 0 bytes read))\nE                 \nE               assert False\n\nTestCase/C360_Android/C360_兼容接口滤镜包/ops兼容下发-滤镜包(ja_JP语言环境).py:316: AssertionError"}, "description": "00333_值获取", "steps": [{"name": "step1: 获取Global_Var参数", "status": "passed", "attachments": [{"source": "cc6edde0-d830-4ddc-9770-d713cde1d0ec-attachment.html", "type": "text/html"}], "start": 1687776828163, "stop": 1687776828163}, {"name": "step3: 设置<请求头>参数", "status": "passed", "attachments": [{"name": "设置后的<请求头>：", "source": "872966bc-8583-4d5a-9243-34682acf9e61-attachment.html", "type": "text/html"}], "parameters": [{"name": "headers", "value": "{'accept-encoding': '${acceptencoding}', 'connection': '${connection}', 'content-type': '${contenttype}', 'user-agent': '${useragent}', 'x-postman-captr': '${xpostmancaptr}'}"}], "start": 1687776828163, "stop": 1687776828163}, {"name": "step4: 设置<请求体>参数", "status": "passed", "attachments": [{"name": "设置后的<请求体> ", "source": "e40266af-0885-4568-b645-7be58239067c-attachment.html", "type": "text/html"}], "parameters": [{"name": "params", "value": "{'UTCOffset': '${UTCOffset}', 'appName': '${appName}', 'appVersion': '${appVersion}', 'channel': '${channel}', 'device': '${device1}', 'deviceId': '${deviceId}', 'eid': '${eid}', 'growingIOUserId': '${growingIOUserId}', 'language': '${language}', 'localTime': '${localTime}', 'locale': '${locale}', 'newAddToday': '${newAddToday}', 'platform': '${platform}', 'rTime': '${rTime}', 'sig': '${sig}', 'version': '${version}'}"}], "start": 1687776828163, "stop": 1687776828163}, {"name": "step5: 设置请求体中<sig>参数", "status": "passed", "attachments": [{"name": "设置后的<请求头、体> ", "source": "c4a61c33-55dc-4b22-b179-af94a39c1e3b-attachment.html", "type": "text/html"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "url", "value": "'https://cdn-bm.camera360.com/api/product/query'"}, {"name": "headers", "value": "{'accept-encoding': 'gzip', 'connection': 'Keep-Alive', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', 'user-agent': 'Dalvik/2.1.0 (Linux; U; Android 12; PDEM10 Build/RKQ1.211103.002)', 'x-postman-captr': '9686094'}"}, {"name": "params", "value": "{'UTCOffset': '28800', 'appName': 'camera360', 'appVersion': '9.9.29', 'channel': 'GoogleMarket', 'device': 'PDEM10', 'deviceId': '1fc05043f3cbb178a7a1b914c17c2c79', 'eid': '1fc05043f3cbb178a7a1b914c17c2c79', 'growingIOUserId': 'bbfe4777-a33c-3606-b036-7bffc42a7a8f', 'language': 'ja_JP', 'localTime': '1673247449', 'locale': 'ja_JP', 'newAddToday': '1', 'platform': 'android', 'rTime': '1673247449', 'sig': '1abb9ebd314937803e9f69f720ccbb4d', 'version': '0'}"}, {"name": "sig", "value": "8"}, {"name": "env", "value": "'PROD'"}], "start": 1687776828163, "stop": 1687776828164}, {"name": "step6: 发起请求", "status": "passed", "parameters": [{"name": "url", "value": "'https://cdn-bm.camera360.com/api/product/query'"}, {"name": "method", "value": "'POST'"}, {"name": "params", "value": "{'UTCOffset': '28800', 'appName': 'camera360', 'appVersion': '9.9.29', 'channel': 'GoogleMarket', 'device': 'PDEM10', 'deviceId': '1fc05043f3cbb178a7a1b914c17c2c79', 'eid': '1fc05043f3cbb178a7a1b914c17c2c79', 'growingIOUserId': 'bbfe4777-a33c-3606-b036-7bffc42a7a8f', 'language': 'ja_JP', 'localTime': '1673247449', 'locale': 'ja_JP', 'newAddToday': '1', 'platform': 'android', 'rTime': '1673247449', 'sig': 'a530e3e62f8704ef108133c338dfb715', 'version': '0'}"}, {"name": "encryption", "value": "0"}, {"name": "headers", "value": "{'accept-encoding': 'gzip', 'connection': 'Keep-Alive', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', 'user-agent': 'Dalvik/2.1.0 (Linux; U; Android 12; PDEM10 Build/RKQ1.211103.002)', 'x-postman-captr': '9686094'}"}, {"name": "timeout", "value": "10.0"}], "start": 1687776828164, "stop": 1687776830338}], "attachments": [{"name": "返回结果：", "source": "d6f53a26-e1cd-440f-8a2c-f5b3059d68cb-attachment.html", "type": "text/html"}, {"name": "log", "source": "cd09b4c4-78d7-489d-b583-e438945f136d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'00333_值获取'"}, {"name": "priority", "value": "5"}, {"name": "encryption", "value": "0"}, {"name": "sig", "value": "8"}, {"name": "env", "value": "'PROD'"}, {"name": "method", "value": "'POST'"}, {"name": "url", "value": "'https://cdn-bm.camera360.com/api/product/query'"}, {"name": "headers", "value": "{'accept-encoding': '${acceptencoding}', 'connection': '${connection}', 'content-type': '${contenttype}', 'user-agent': '${useragent}', 'x-postman-captr': '${xpostmancaptr}'}"}, {"name": "params", "value": "{'UTCOffset': '${UTCOffset}', 'appName': '${appName}', 'appVersion': '${appVersion}', 'channel': '${channel}', 'device': '${device1}', 'deviceId': '${deviceId}', 'eid': '${eid}', 'growingIOUserId': '${growingIOUserId}', 'language': '${language}', 'localTime': '${localTime}', 'locale': '${locale}', 'newAddToday': '${newAddToday}', 'platform': '${platform}', 'rTime': '${rTime}', 'sig': '${sig}', 'version': '${version}'}"}, {"name": "expected", "value": "[{'eq': ['code', '200']}]"}, {"name": "export", "value": "{'groupScenesId': 'body.data.group_scenes.scenes[*].id', 'itemsId': 'body.data.items[*].id', 'packagesId': 'body.data.packages[*].pid', 'scenesId': 'body.data.scenes[*].id', 'topicId': 'body.data.topics[*].topic_id'}"}], "start": 1687776828163, "stop": 1687776830340, "uuid": "15a898b4-e7d1-408d-aab1-490a2731921c", "historyId": "f6c0ce63e45f7cddcb6174438838b7ba", "testCaseId": "31683e83c3e8840560a59253f5e0c92a", "fullName": "TestCase.C360_Android.C360_兼容接口滤镜包.ops兼容下发-滤镜包(ja_JP语言环境).TestDispatcher#test_api", "labels": [{"name": "story", "value": "00333_值获取"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "C360_兼容接口滤镜包"}, {"name": "parentSuite", "value": "TestCase.C360_Android.C360_兼容接口滤镜包"}, {"name": "suite", "value": "ops兼容下发-滤镜包(ja_JP语言环境)"}, {"name": "subSuite", "value": "TestDispatcher"}, {"name": "host", "value": "wangxiangyudeMacBook-Pro.local"}, {"name": "thread", "value": "21143-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.C360_Android.C360_兼容接口滤镜包.ops兼容下发-滤镜包(ja_JP语言环境)"}]}